import streamlit as st
import requests
import os
from dotenv import load_dotenv

load_dotenv()

API_URL = os.getenv("API_URL", "http://localhost:8000/api")

if "token" not in st.session_state:
    st.session_state.token = None

if "register_mode" not in st.session_state:
    st.session_state.register_mode = False

if "app_started" not in st.session_state:
    st.session_state.app_started = False

st.set_page_config(page_title="Food Assistant", layout="centered")

# === –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ ===
def login_form():
    st.title("üîê –í—Ö–æ–¥")
    username = st.text_input("–õ–æ–≥–∏–Ω")
    password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")

    if st.button("–í–æ–π—Ç–∏"):
        response = requests.post(f"{API_URL}/auth/login", json={
            "username": username,
            "password": password
        })
        if response.status_code == 200:
            st.session_state.token = response.json()["access_token"]
            st.success("–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!")
        else:
            st.error("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")

    if st.session_state.token:
        if st.button("–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é"):
            st.session_state.app_started = True

    if st.button("–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"):
        st.session_state.register_mode = True

# === –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ===
def register_form():
    st.title("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    username = st.text_input("–ù–æ–≤—ã–π –ª–æ–≥–∏–Ω")
    password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")
    confirm_password = st.text_input("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å", type="password")

    if st.button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"):
        if password != confirm_password:
            st.error("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç")
            return
        response = requests.post(f"{API_URL}/auth/register", json={
            "username": username,
            "password": password
        })
        if response.status_code == 200:
            st.success("–£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è! –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ.")
            st.session_state.register_mode = False
        else:
            st.error(f"–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.text}")

    if st.button("–ù–∞–∑–∞–¥ –∫–æ –≤—Ö–æ–¥—É"):
        st.session_state.register_mode = False

# === –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ===
def main_app():
    st.title("üç≤ –ü–æ–¥–±–æ—Ä —Ä–µ—Ü–µ–ø—Ç–æ–≤")

    st.header("–î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç")
    name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞")
    goal = st.selectbox("–¶–µ–ª—å", ["–ü–æ—Ö—É–¥–µ–Ω–∏–µ", "–ù–∞–±–æ—Ä –º–∞—Å—Å—ã", "–ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ"])
    time = st.number_input("–í—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏ (–º–∏–Ω)", min_value=1)
    ingredients = st.text_area("–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)")
    description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ")

    if st.button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç"):
        headers = {"Authorization": f"Bearer {st.session_state.token}"}
        data = {
            "name": name,
            "goal": goal,
            "cooking_time": time,
            "ingredients": ingredients,
            "description": description
        }
        response = requests.post(f"{API_URL}/recipes/", json=data, headers=headers)
        if response.status_code == 200:
            st.success("–†–µ—Ü–µ–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω!")
        else:
            st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ—Ü–µ–ø—Ç–∞")

    st.header("üìã –í–∞—à–∏ —Ä–µ—Ü–µ–ø—Ç—ã")
    headers = {"Authorization": f"Bearer {st.session_state.token}"}
    response = requests.get(f"{API_URL}/recipes/", headers=headers)
    if response.status_code == 200:
        recipes = response.json()
        for r in recipes:
            with st.expander(f"{r['name']} ({r['cooking_time']} –º–∏–Ω)"):
                st.markdown(f"**–¶–µ–ª—å:** {r['goal']}")
                st.markdown(f"**–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:** {r['ingredients']}")
                st.markdown(f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {r['description']}")
    else:
        st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã")

# === –ó–∞–ø—É—Å–∫ ===
if st.session_state.app_started and st.session_state.token:
    main_app()
else:
    if st.session_state.register_mode:
        register_form()
    else:
        login_form()